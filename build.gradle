buildscript {
  repositories {
    mavenCentral()
  }

  dependencies {
    classpath 'com.android.tools.build:gradle:0.13.0'
  }
}

task wrapper(type: Wrapper) {
  gradleVersion = '2.1'
}

apply plugin: 'com.android.application'

dependencies {
  repositories {
    mavenCentral()
  }

  compile 'junit:junit:4.11'
}

android {
  compileSdkVersion 18
  buildToolsVersion '21.1.1'

  defaultConfig {
//    testApplicationId 'com.imdp.instaclimb.tests'
  }

  packagingOptions {
    exclude 'LICENSE.txt'
  }
}

sourceSets {
  test.java.srcDirs = ['src/test/java']
  test.resources.srcDirs = ['src/test/res']
}

task showClasspath << {
  buildscript.configurations.classpath.each { println it.name }
}

task showVersion << {
  println buildscript.configurations.classpath.resolvedConfiguration.firstLevelModuleDependencies.moduleVersion
}

sourceSets {
  unitTest {
    java.srcDir file('src/test/java')
    resources.srcDir file('src/test/resources')
  }
}

configurations {
  unitTestCompile.extendsFrom runtime
  unitTestRuntime.extendsFrom unitTestCompile
}

dependencies {
  unitTestCompile files("$project.buildDir/classes/release")
  unitTestCompile 'junit:junit:4.11', 'org.mockito:mockito-core:1.9.0'
  unitTestCompile 'com.google.android:android:4.0.1.2'
  unitTestCompile 'com.pivotallabs:robolectric:1.2'
  configurations.unitTestCompile.exclude group: 'com.google.android.maps'
}

task unitTest(type:Test, dependsOn: assemble) {
  description = "run unit tests"
  testClassesDir = project.sourceSets.unitTest.output.classesDir
  classpath = project.sourceSets.unitTest.runtimeClasspath
}

check.dependsOn unitTest


//--------------------------------------------------------------------------------
//    buildTypes {
//        release {
//            runProguard true
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), \
//            'proguard-rules.txt'
//        }
//    }


//  sourceSets {
//    main {
//      manifest.srcFile 'AndroidManifest.xml'
//      java.srcDirs = ['src']
//      resources.srcDirs = ['src']
//      aidl.srcDirs = ['src']
//      renderscript.srcDirs = ['src']
//      res.srcDirs = ['res']
//      assets.srcDirs = ['assets']
//    }
//    androidTest.setRoot('tests')
//  }

//  sourceSets {
//    androidTest.setRoot('test')
//  }

//sourceSets {
//  test {
//    java.srcDirs = ["test"]
//  }
//}


